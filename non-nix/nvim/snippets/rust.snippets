#################
# Rust Snippets #
#################

# Common Auto
priority 1000
snippet let "Let binding" bA
	let ${1}: ${2} = ${3};$0
snippet mlet "Mutable let binding" bA
	let mut ${1}: ${2} = ${3};$0
snippet fn "Function definition" bA
	fn ${1:function_name}(${2})${3} {
		${0}
	}
snippet pfn "Public Function definition" bA
	pub fn ${1:function_name}(${2})${3} {
		${0}
	}
snippet afn "Async function definition" bA
	async fn ${1:function_name}(${2})${3} {
		${0}
	}
snippet pafn "Public Async function definition" bA
	pub async fn ${1:function_name}(${2})${3} {
		${0}
	}
snippet struct "Struct definition" bA
	struct ${1:Name} {
		${2:field}: ${3:Type},
		$0
	}
snippet pstruct "Struct definition" bA
	pub struct ${1:Name} {
		${2:field}: ${3:Type},
		$0
	}
snippet imp "Struct/Trait implementation" b
	impl ${1:Type/Trait}${2: for $3} {
		${0}
	}
snippet enu "enum definition" bA
	enum ${1:Name} {
		${0}
	}
snippet penu "public enum definition" bA
	pub enum ${1:Name} {
		${0}
	}
snippet if "IF statement" bA
	if ${1} {
		${2:${VISUAL}}
	}$0
snippet lif "if let (...)" bA
	if let ${1:Some($2)} = $3 {
		${0:${VISUAL}}
	}
snippet for "for ... in ... loop" bA
	for ${1:i} in ${2} {
		${0:${VISUAL}}
	}
snippet box "Box::new()" wA
	Box::new(${0:${VISUAL}})
snippet some "Some(..)" bA
	Some(${1:${VISUAL}})
snippet while "while loop" bA
	while $1 {
		${0:${VISUAL}}
	}
snippet lwhile "while let (...)" bA
	while let ${1:Some($2)} = $3 {
		${0:${VISUAL}}
	}
snippet else "else statement" wA
	else {
		${0:${VISUAL}}
	}
snippet elif "else if statement" wA
	else if ${1} {
		${2:${VISUAL}}
	}$0
# Common
snippet todo TODO comment
	// TODO: $0
snippet fixme FIXME comment
	// FIXME: $0
snippet test "Unit test function" b
	#[test]
	fn ${1:function_name}_test() {
		${0}
	}
snippet testmod "Test module" b
	#[cfg(test)]
	mod tests {
		use super::${1:*};

		$0
	}
snippet derive "#[derive(..)]" b
	#[derive(${1:Debug})]
# Control sturctures
snippet new "Constructor function"
	pub fn new(${2}) -> ${1:Self} {
		$1 { ${3} }
	}
	$0
